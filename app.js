const express = require("express")const cors = require("cors")const bodyParser = require("body-parser")const mongoose = require("mongoose")const app = express()mongoose.connect('mongodb+srv://Test:Test123@cluster0.5eydy.mongodb.net/url',{useNewUrlParser: true, useUnifiedTopology: true})//middlewareapp.use(cors({origin: true}))app.use(bodyParser.json())const urlSchema = mongoose.Schema({        shortenedURL: String,        originalURL: String})const Url = mongoose.model('urls',urlSchema)const userSchema = mongoose.Schema({    userID : String,    userInfo: {},    urls:[urlSchema]})const User = mongoose.model('users',userSchema);//Routesapp.get('/',(req,res)=>{    Url.find({},(err,data)=>{        if (data){           res.send(data)        }else{            if (err){                res.send(err)            }else {                res.send('no such ')            }        }    })})app.post('/new/url/:shortenedUrl',(req,res)=>{    const {shortenedUrl} = req.params    const {originalUrl,userID} = req.body   const shortUrl = new Url({       shortenedURL: shortenedUrl,       originalURL: originalUrl   })    if (shortenedUrl==='new'||'user'){        res.status(404).json('url exists')    }else {        Url.findOne({shortenedURL:shortenedUrl},(err,url)=>{            if (url){                res.status(404).json('url exists')            }else if (err){                console.log(err)            }else {                shortUrl.save(error=>{                    if (error){                        console.log(error)                    }else {                        User.findOneAndUpdate({userID:userID}, {                            $push: {                                urls: {                                    shortenedURL: shortenedUrl,                                    originalURL: originalUrl                                }                            }                        }, function (err) {                            if (err) {                                console.log(err);                            } else {                                res.status(200).json('url added')                            }                        })                    }                })            }        })    }})app.get('/:shortenedUrl',(req,res)=>{    const {shortenedUrl} = req.params;    Url.findOne({shortenedURL:shortenedUrl},(err,url)=>{        if (url){            res.redirect(url.originalURL)        }else{            res.status(404).send("No such URL")        }        if (err){            console.log(err)        }    })})app.post('/new/user',(req, res) => {    const {userID,userInfo} = req.body    const user = new User({        userID:userID,        userInfo:userInfo    })    User.findOne({userID:userID},(err,user)=>{        if (user){            res.status(404).json('user exists')        }else if (err){            console.log(err)        }else {            user.save(error=>{                if (error){                    console.log(error)                }else {                    res.status(200).json('user added')                }            })        }    })})app.post('/user',(req, res) => {    const {userID} = req.body;    User.findOne({userID:userID},(err,user)=>{        if (err){            res.json(err)        }else {            if (user){                res.status(200).json(user)            }else {                res.status(400).json('no Such user')            }        }    })})//Listen commandapp.listen(process.env.PORT||3000,(req,res)=>{    console.log("Server listening on port 3000.")})